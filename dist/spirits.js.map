{"version":3,"file":"spirits.js","sources":["../src/spirits.js"],"sourcesContent":["// MIT License / Copyright Kayla Washburn 2014\n\"use strict\"\n\nimport { createScope } from 'gardens'\nconst garden = createScope( 'string-spirits' )\n\nexport default class Spirit {\n  constructor( string ) {\n    let invalid = /^[^A-Za-z0-9\\?\\*\\[\\]\\.\\_\\-\\:]+$/.exec( string )\n    if ( typeof string !== 'string' ) throw garden.typeerror( 'Spirits are made out of strings!')\n    if ( invalid ) throw garden.error( `Invalid character ${invalid[0]} in Spirit!` )\n\n    let stars = 0\n    this.expression = new RegExp( `^${\n  \t\tstring\n  \t\t  .replace( /([\\.\\[\\]])/g, c => `\\\\${c}` ) // Make sure that special characters are escaped\n  \t\t  .replace( /\\*/g, () => ( stars++, '.*' ) ) // Turn * wildcards into RegExp wildcards\n        .replace( /\\?/g, '.' ) // If it's anywhere else, the character is required.\n        .replace( /\\.$/, '.?' ) // If a ? is at the end of a string, the character is optional\n  \t}$` )\n\n  \tthis._string = string\n    this.spirit = string.length - stars\n  }\n\n  static createSpirit( string ) {\n    return new Spirit( string )\n  }\n\n  match( string ) {\n    if ( typeof string !== 'string' ) throw garden.typeerror( 'Spirits can only match against strings!' )\n    return this.expression.exec( string )\n  }\n\n  allMatches( strings ) {\n    if ( !Array.isArray ) throw garden.typeerror( 'Spirit#allMatches expects an array of strings!' )\n    strings.filter( string => !!this.match( string ) )\n  }\n\n  toString() {\n    return this._string\n  }\n\n  static match( spirit, string ) {\n    let s = spirit instanceof Spirit ? spirit : new Spirit( spirit )\n    return new Spirit( spirit ).match( string )\n  }\n\n  static bestMatch( spirits, string ) {\n    if ( !Array.isArray( spirits ) ) throw garden.typeerror( 'Spirit.bestMatch expects an array of Spirits!' )\n\n    let match = null\n\n    spirits.forEach( item => {\n      let spirit = item instanceof Spirit ? item : new Spirit( item )\n      if ( spirit.match( string ) ) {\n        if ( !match ) match = spirit\n        else if ( spirit.spirit > match.spirit ) match = spirit\n      }\n    } )\n\n    return match\n  }\n\n  static map( spirits, strings ) {\n    if ( !(Array.isArray( spirits ) && Array.isArray( strings )) )\n      throw garden.typeerror( 'Spirit.map expects an array of spirits and an array of strings!' )\n\n    return new Map(\n      strings.map( string => {\n        return [ string, spirits.filter( spirit =>\n          !!(( spirit instanceof Spirit ? spirit : new Spirit( spirit ) ).match( string ))\n        ) ]\n      })\n    )\n  }\n}\n"],"names":["createScope"],"mappings":"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"}